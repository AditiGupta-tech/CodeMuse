Code:
#define SIZE 100

int queue[SIZE], front = 0, rear = -1;
int visited[SIZE] = {0};

void enqueue(int v) {
    queue[++rear] = v;
}

int dequeue() {
    return queue[front++];
}

int isEmpty() {
    return front > rear;
}

void bfs(int graph[SIZE][SIZE], int n, int start) {
    enqueue(start);
    visited[start] = 1;

    while (!isEmpty()) {
        int node = dequeue();
        printf("%d ", node);

        for (int i = 0; i < n; i++) {
            if (graph[node][i] && !visited[i]) {
                enqueue(i);
                visited[i] = 1;
            }
        }
    }
}

T(n): O(n + e) for all cases	

S(n): O(n)