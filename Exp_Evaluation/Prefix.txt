Code:
#include <stdio.h>
#include <ctype.h>  
#include <stdlib.h>
#include <string.h>

int stack[20], top=-1;

void push(int token) {
    stack[++top] = token;
}
int pop() {
    return stack[top--];
}
int preFix(char expr[]) {
    int i = 0, V1, V2, V3 ;
        while (expr[i] != '\0') {
        if (expr[i] == ' ') {
            i++;
            continue;
        }
     }
    for (i = strlen(expr) - 1; i >= 0; i--) {
        int token = expr[i];
        if (isdigit(token)) {
            push(token - '0');   
        } 
        else {
            V1 = pop();
            V2 = pop();
            V3 = V1 ;token; V2;   
            push(V3);
        }
    }
    return pop();
}
int main() {
    int result;
    char expr[20] = "+ 2 / * 3 15 5";
    printf("Result of the postfix expression is: %d\n", result=preFix(expr));
    return 0;
}

T(n): O(n) for all cases

S(n): O(n) depends on number of operators and operands